{"ast":null,"code":"import axios from 'axios';\nimport { resolve } from 'url'; //import react from 'react'\n\nvar baseUrl = '/api/persons';\n\nvar getAll = function getAll() {\n  var request = axios.get(baseUrl);\n  return request.then(function (response) {\n    return response.data;\n  });\n};\n\nvar create = function create(newObject) {\n  // Estää toisen samannimisen kaverin lisäämisen\n\n  /*   getAll().then(allPersons => {\n      console.log(\"data:\", allPersons)\n      if (allPersons.map(persons => persons.name).includes(newObject.name)) {\n        console.log(\"sama nimi\")\n        return allPersons.reject(`${newObject.name} on jo luettelossa`)\n        //return persons.reject(new Error(`${newObject.name} on jo luettelossa`))\n      }\n    })\n   */\n  var request = axios.post(baseUrl, newObject);\n  return request.then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.log(error.response.data);\n  });\n};\n\nvar update = function update(id, newObject) {\n  var request = axios.put(\"\".concat(baseUrl, \"/\").concat(id), newObject);\n  return request.then(function (response) {\n    return response.data;\n  });\n};\n\nvar remove = function remove(id) {\n  var request = axios.delete(\"\".concat(baseUrl, \"/\").concat(id));\n  return request.then(function (response) {\n    return response.data;\n  });\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  remove: remove\n};","map":{"version":3,"sources":["/Users/mari/Documents/Harri/FSO/osa_2/puhelinluettelo/src/services/persons.js"],"names":["axios","resolve","baseUrl","getAll","request","get","then","response","data","create","newObject","post","catch","error","console","log","update","id","put","remove","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,KAAxB,C,CACA;;AAEA,IAAMC,OAAO,GAAG,cAAhB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,OAAO,GAAGJ,KAAK,CAACK,GAAN,CAAUH,OAAV,CAAhB;AACA,SAAOE,OAAO,CAACE,IAAR,CAAa,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAArB,CAAP;AACD,CAHD;;AAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,SAAS,EAAI;AAE1B;;AACF;;;;;;;;;AAUE,MAAMN,OAAO,GAAGJ,KAAK,CAACW,IAAN,CAAWT,OAAX,EAAoBQ,SAApB,CAAhB;AACA,SAAON,OAAO,CAACE,IAAR,CAAa,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAArB,EAAwCI,KAAxC,CAA8C,UAAAC,KAAK,EAAI;AAC5DC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACN,QAAN,CAAeC,IAA3B;AACD,GAFM,CAAP;AAGD,CAjBD;;AAmBA,IAAMQ,MAAM,GAAG,SAATA,MAAS,CAACC,EAAD,EAAKP,SAAL,EAAmB;AAChC,MAAMN,OAAO,GAAGJ,KAAK,CAACkB,GAAN,WAAahB,OAAb,cAAwBe,EAAxB,GAA8BP,SAA9B,CAAhB;AACA,SAAON,OAAO,CAACE,IAAR,CAAa,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAArB,CAAP;AACD,CAHD;;AAKA,IAAMW,MAAM,GAAG,SAATA,MAAS,CAAAF,EAAE,EAAI;AACnB,MAAMb,OAAO,GAAGJ,KAAK,CAACoB,MAAN,WAAgBlB,OAAhB,cAA2Be,EAA3B,EAAhB;AACA,SAAOb,OAAO,CAACE,IAAR,CAAa,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAArB,CAAP;AACD,CAHD;;AAKA,eAAe;AAAEL,EAAAA,MAAM,EAANA,MAAF;AAAUM,EAAAA,MAAM,EAANA,MAAV;AAAkBO,EAAAA,MAAM,EAANA,MAAlB;AAA0BG,EAAAA,MAAM,EAANA;AAA1B,CAAf","sourcesContent":["import axios from 'axios'\nimport { resolve } from 'url';\n//import react from 'react'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n\n  // Estää toisen samannimisen kaverin lisäämisen\n/*   getAll().then(allPersons => {\n    console.log(\"data:\", allPersons)\n    if (allPersons.map(persons => persons.name).includes(newObject.name)) {\n      console.log(\"sama nimi\")\n      return allPersons.reject(`${newObject.name} on jo luettelossa`)\n      //return persons.reject(new Error(`${newObject.name} on jo luettelossa`))\n    }\n  })\n */\n\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data).catch(error => {\n    console.log(error.response.data)\n  })\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n};\n\nexport default { getAll, create, update, remove }"]},"metadata":{},"sourceType":"module"}